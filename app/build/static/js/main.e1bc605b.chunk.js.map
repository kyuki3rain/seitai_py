{"version":3,"sources":["reportWebVitals.js","eel.js","Init.js","App.js","RealtimeLineChart.js","Graph.js","Main.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","eel","window","modes","data_modes","Init","setMode","useState","ports","setPorts","selectValue","setSelectValue","dataValue","setDataValue","modeValue","setModeValue","dataLength","setDataLength","threshold","setThreshold","importFileName","setImportFileName","flag","setFlag","get_ports","a","new_ports","get_threshold","new_threshold","get_import_file_name","new_import_file_name","useEffect","class","style","height","margin","color","width","value","onChange","e","target","map","port","data_mode","mode","type","Number","onClick","new_flag","console","log","set_args","data_length","import_file_name","App","flags","setFlags","render_data","get_result","result","useInterval","display","flexDirection","alignItems","justifyContent","backgroundColor","RealtimeLineChart","props","options","chart","zoom","enabled","animations","easing","dynamicAnimation","xaxis","range","yaxis","show","min","max","labels","formatter","val","toFixed","series","dataList","addData","data","time","new_data","length","shift","x","y","Graph","defaultDataList","name","setDataList","get_data","i","Main","get_mode","new_mode","start_app","ReactDOM","render","StrictMode","className","document","getElementById"],"mappings":"mKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,qCCLCQ,EAFHC,OAAM,ICIZC,EAAQ,CAAC,cAAe,cAAe,eACvCC,EAAa,CAAC,SAAU,QAqIfC,EAnIF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACFC,qBADE,mBACrBC,EADqB,KACdC,EADc,OAEUF,qBAFV,mBAErBG,EAFqB,KAERC,EAFQ,OAGMJ,mBAAS,QAHf,mBAGrBK,EAHqB,KAGVC,EAHU,OAIMN,mBAAS,eAJf,mBAIrBO,EAJqB,KAIVC,EAJU,OAKQR,mBAAS,GALjB,mBAKrBS,EALqB,KAKTC,EALS,OAMMV,mBAAS,GANf,mBAMrBW,EANqB,KAMVC,EANU,OAOgBZ,mBAAS,IAPzB,mBAOrBa,EAPqB,KAOLC,EAPK,OAQJd,mBAAS,MARL,mBAQrBe,EARqB,KAQfC,EARe,KAUtBC,EAAS,uCAAG,4BAAAC,EAAA,sEACQxB,EAAIuB,WAAJvB,GADR,OACVyB,EADU,OAEhBjB,EAASiB,GACTf,EAAee,EAAU,IAHT,2CAAH,qDAMTC,EAAa,uCAAG,4BAAAF,EAAA,sEACQxB,EAAI0B,eAAJ1B,GADR,OACd2B,EADc,OAEpBT,EAAaS,GAFO,2CAAH,qDAIbC,EAAoB,uCAAG,4BAAAJ,EAAA,sEACQxB,EAAI4B,sBAAJ5B,GADR,OACrB6B,EADqB,OAE3BT,EAAkBS,GAFS,2CAAH,qDAwB1B,OANAC,qBAAU,WACRP,IACAG,IACAE,IACAN,EAAQ,QACP,IACCf,EAEA,mCACE,sBAAKwB,MAAM,SAASC,MAAO,CAACC,OAAQ,KAApC,UACE,oBAAID,MAAO,CAACE,OAAQ,GAApB,sBACU,IAATb,EAAiB,qBAAKW,MAAO,CAACG,MAAO,OAApB,wMAAoE,6BACtF,sBAAKJ,MAAM,MAAMC,MAAO,CAACI,MAAO,KAAhC,UACE,8CACA,wBAAQC,MAAO5B,EAAasB,MAAM,QAAQO,SAAU,SAACC,GACnD7B,EAAe6B,EAAEC,OAAOH,QAD1B,SAGG9B,EAAMkC,KAAI,SAACC,GAAD,OACT,wBAAQL,MAAOK,EAAf,SAAsBA,YAI5B,sBAAKX,MAAM,MAAMC,MAAO,CAACI,MAAO,KAAhC,UACE,qBAAKL,MAAM,QAAX,6BACA,wBAAQM,MAAO1B,EAAWoB,MAAM,QAAQO,SAAU,SAACC,GACjD3B,EAAa2B,EAAEC,OAAOH,QADxB,SAGGlC,EAAWsC,KAAI,SAACE,GAAD,OACd,wBAAQN,MAAOM,EAAf,SAA2BA,YAIjC,sBAAKZ,MAAM,MAAMC,MAAO,CAACI,MAAO,KAAhC,UACE,qBAAKL,MAAM,QAAX,yBACA,wBAAQM,MAAOxB,EAAWkB,MAAM,QAAQO,SAAU,SAACC,GACjDzB,EAAayB,EAAEC,OAAOH,QADxB,SAGGnC,EAAMuC,KAAI,SAACG,GAAD,OACT,wBAAQP,MAAOO,EAAf,SAAsBA,YAI5B,sBAAKb,MAAM,MAAMC,MAAO,CAACI,MAAO,KAAhC,UACE,qBAAKL,MAAM,QAAX,yBACA,uBAAOc,KAAK,WAAWd,MAAM,QAAQM,MAAOtB,EAAYuB,SAAU,SAACC,GACjEvB,EAAc8B,OAAOP,EAAEC,OAAOH,cAGlC,sBAAKN,MAAM,MAAMC,MAAO,CAACI,MAAO,KAAhC,UACE,qBAAKL,MAAM,QAAX,uBACA,uBAAOc,KAAK,WAAWd,MAAM,QAAQM,MAAOpB,EAAWqB,SAAU,SAACC,GAChErB,EAAa4B,OAAOP,EAAEC,OAAOH,cAIjC,sBAAKN,MAAM,MAAMC,MAAO,CAACI,MAAO,KAAhC,UACE,qBAAKL,MAAM,QAAX,uBACA,uBAAOc,KAAK,WAAWd,MAAM,aAAaM,MAAOlB,EAAgBmB,SAAU,SAACC,GAC1ErB,EAAaqB,EAAEC,OAAOH,aAG1B,wBACEU,QAAS,WACP,IAAMC,GA3EhBC,QAAQC,IAAI,mBACZD,QAAQC,IAAIzC,EAAaE,EAAWE,EAAWM,EAAgBF,MAC3DR,GAA6B,WAAdE,KACF,gBAAdE,GAA6C,SAAdF,MAC9BI,KACa,gBAAdF,IAAgCM,MAClB,SAAdR,IAAyBQ,OACxBF,GAA2B,gBAAdJ,IAqEPoC,QAAQC,IAAIF,GACZ1B,EAAQ0B,GACLA,GACDhD,EAAImD,SAAS,CACXT,KAAMjC,EACNkC,UAAWhC,EACXiC,KAAM/B,EACNuC,YAAarC,EACbE,UAAWA,EACXoC,iBAAkBlC,IAEnBd,EAAQQ,IAGToC,QAAQC,IAAI,oBAGhBlB,MAAO,CAACC,OAAQ,GAAIG,MAAO,KApB7B,wBA4BC,8C,OCzFIkB,MAxCf,WAAgB,IAAD,EACahD,qBADb,mBACNiD,EADM,KACCC,EADD,KAGPC,EAAW,uCAAG,4BAAAjC,EAAA,sEACGxB,EAAI0D,YAAJ1D,GADH,OACZ2D,EADY,OAElBH,EAASG,GAFS,2CAAH,qDAQjB,OAHAC,aAAY,WACVH,MACC,KACCF,EAEA,mCACE,qBACEvB,MAAO,CACLC,OAAQ,IACRG,MAAO,IACPyB,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,eAAgB,iBAPpB,SAUGT,EAAMd,KAAI,SAACpB,GACV,IAAMc,EAAQd,GAAQ,GAAM,MAAQ,QACpC,OACE,qBACEW,MAAO,CAAEI,MAAO,IAAKH,OAAQ,IAAKgC,gBAAiB9B,YAQxD,8C,yBCNI+B,EAhCW,SAACC,GA6BzB,OAAO,cAAC,IAAD,CAAOtB,KAAK,OAAOuB,QA5BV,CACdC,MAAO,CACLpC,OAAQ,IACRG,MAAO,IACPkC,KAAM,CACJC,SAAS,GAEXC,WAAY,CACVD,SAAS,EACTE,OAAQ,SACRC,iBAAkB,CAChBH,SAAS,KAIfI,MAAO,CACL9B,KAAM,WACN+B,MAAO,GAETC,MAAO,CACLC,MAAM,EACNC,IAAK,EACLC,IAAK,IACLC,OAAQ,CACNC,UAAW,SAACC,GAAD,OAASA,EAAIC,QAAQ,OAIMC,OAAQlB,EAAMmB,YC1BtDC,EAAU,SAACC,EAAMC,EAAMC,GAE3B,OADIF,EAAKG,OAAS,IAAIH,EAAKI,QACrB,GAAN,mBACKJ,GADL,CAEE,CACEK,EAAGJ,EACHK,EAAGJ,MAwDMK,MAnDf,WACE,IACMC,EADW,CAAC,IAAK,IAAK,IAAK,IAAK,KACLvD,KAAI,SAACwD,GAAD,MAAW,CAC9CA,KAAMA,EACNT,KAAM,OAJO,EAMiBlF,mBAAS0F,GAN1B,mBAMRV,EANQ,KAMEY,EANF,KAQTzC,EAAW,uCAAG,4BAAAjC,EAAA,sEACKxB,EAAImG,UAAJnG,GADL,OACZ0F,EADY,OAElBzC,QAAQC,IAAIwC,GACZQ,EACEZ,EAAS7C,KAAI,SAAC0C,EAAKiB,GAEjB,MAAO,CACLH,KAAMd,EAAIc,KACVT,KAAMD,EAAQJ,EAAIK,KAAME,EAAS,GAAIA,EAASU,EAAI,SARtC,2CAAH,qDAkBjB,OAJAxC,aAAY,WACVH,MACC,KAEC6B,EAEA,sBAAKtD,MAAO,CAAE6B,QAAS,OAAQC,cAAe,OAA9C,UACE,qBAAK9B,MAAO,CAAEI,MAAO,IAAKH,OAAQ,KAAlC,SACE,cAAC,EAAD,CAAmBqD,SAAU,CAACA,EAAS,QAEzC,qBAAKtD,MAAO,CAAEI,MAAO,IAAKH,OAAQ,KAAlC,SACE,cAAC,EAAD,CAAmBqD,SAAU,CAACA,EAAS,QAEzC,qBAAKtD,MAAO,CAAEI,MAAO,IAAKH,OAAQ,KAAlC,SACE,cAAC,EAAD,CAAmBqD,SAAU,CAACA,EAAS,QAEzC,qBAAKtD,MAAO,CAAEI,MAAO,IAAKH,OAAQ,KAAlC,SACE,cAAC,EAAD,CAAmBqD,SAAU,CAACA,EAAS,QAEzC,qBAAKtD,MAAO,CAAEI,MAAO,IAAKH,OAAQ,KAAlC,SACE,cAAC,EAAD,CAAmBqD,SAAU,CAACA,EAAS,WAKtC,8CCfIe,MAzCf,WAAiB,IAAD,EACU/F,qBADV,mBACPsC,EADO,KACDvC,EADC,KAERiG,EAAQ,uCAAG,4BAAA9E,EAAA,sEACQxB,EAAIsG,UAAJtG,GADR,OACTuG,EADS,OAEftD,QAAQC,IAAI,gBACZD,QAAQC,IAAIqD,GACZlG,EAAQkG,GAJO,2CAAH,qDAqBd,OAdAzE,qBAAU,WACRwE,MACC,IACHxE,qBAAU,WACI,SAATc,GACD5C,EAAIwG,cAEN,CAAC5D,IACHgB,aAAY,WACG,gBAAThB,GACF0D,MAED,KAEU,SAAT1D,EACK,cAAC,EAAD,CAAMvC,QAASA,IAEX,gBAATuC,EAEA,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,OAIM,gBAATA,EACM,qDAGF,8CCvCT6D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1BvH,K","file":"static/js/main.e1bc605b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const eel = window[\"eel\"];\n\nexport default eel;\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport eel from \"./eel\";\n\nconst modes = [\"application\", \"calibration\", \"create_data\"]\nconst data_modes = [\"serial\", \"test\"]\n\nconst Init = ({ setMode }) => {\n  const [ports, setPorts] = useState();\n  const [selectValue, setSelectValue] = useState();\n  const [dataValue, setDataValue] = useState(\"test\");\n  const [modeValue, setModeValue] = useState(\"calibration\");\n  const [dataLength, setDataLength] = useState(1);\n  const [threshold, setThreshold] = useState(0);\n  const [importFileName, setImportFileName] = useState(\"\");\n  const [flag, setFlag] = useState(null);\n\n  const get_ports = async () => {\n    const new_ports = await eel.get_ports()();\n    setPorts(new_ports);\n    setSelectValue(new_ports[0]);\n  };\n\n  const get_threshold = async () => {\n    const new_threshold = await eel.get_threshold()();\n    setThreshold(new_threshold);\n  };\n  const get_import_file_name = async () => {\n    const new_import_file_name = await eel.get_import_file_name()();\n    setImportFileName(new_import_file_name);\n  };\n\n  const validate = () => {\n    console.log(\"validate start!\")\n    console.log(selectValue, dataValue, modeValue, importFileName, threshold);\n    if(!selectValue && dataValue === \"serial\") return false;\n    if(modeValue === \"create_data\" && dataValue === \"test\") return false;\n    if(!dataLength) return false;\n    if(modeValue === \"create_data\" && !importFileName) return false;\n    if(dataValue === \"test\" && !importFileName) return false;\n    if(!threshold && modeValue === \"application\") return false;\n\n    return true;\n  }\n\n  useEffect(() => {\n    get_ports();\n    get_threshold();\n    get_import_file_name();\n    setFlag(null);\n  }, []);\n  if (ports) {\n    return (\n      <>\n        <div class=\"column\" style={{height: 450}}>\n          <h1 style={{margin: 0}}>Options</h1>\n          {flag === false ? <div style={{color: \"red\"}}>正しく動作しない設定になっています。もう一度確認してください。</div> : <></>}\n          <div class=\"row\" style={{width: 600}}>\n            <div>port select</div>\n            <select value={selectValue} class=\"input\" onChange={(e)=>{\n              setSelectValue(e.target.value)\n            }}>\n              {ports.map((port) => (\n                <option value={port}>{port}</option>\n              ))}\n            </select>\n          </div>\n          <div class=\"row\" style={{width: 600}}>\n            <div class=\"title\">datamode select</div>\n            <select value={dataValue} class=\"input\" onChange={(e) =>{\n              setDataValue(e.target.value)\n              }}>\n              {data_modes.map((data_mode) => (\n                <option value={data_mode}>{data_mode}</option>\n              ))}\n            </select>\n          </div>\n          <div class=\"row\" style={{width: 600}}>\n            <div class=\"title\">mode select</div>\n            <select value={modeValue} class=\"input\" onChange={(e) => {\n              setModeValue(e.target.value)\n              }}>\n              {modes.map((mode) => (\n                <option value={mode}>{mode}</option>\n              ))}\n            </select>\n          </div>\n          <div class=\"row\" style={{width: 600}}>\n            <div class=\"title\">data length</div>\n            <input type=\"textarea\" class=\"input\" value={dataLength} onChange={(e) => {\n              setDataLength(Number(e.target.value))\n            }}></input>\n          </div>\n          <div class=\"row\" style={{width: 600}}>\n            <div class=\"title\">threshold</div>\n            <input type=\"textarea\" class=\"input\" value={threshold} onChange={(e) => {\n              setThreshold(Number(e.target.value))\n            }}></input>\n          </div>\n\n          <div class=\"row\" style={{width: 600}}>\n            <div class=\"title\">file_name</div>\n            <input type=\"textarea\" class=\"input_long\" value={importFileName} onChange={(e) => {\n              setThreshold(e.target.value)\n            }}></input>\n          </div>\n          <button\n            onClick={() => {\n              const new_flag = validate();\n              console.log(new_flag);\n              setFlag(new_flag);\n              if(new_flag){\n                eel.set_args({ \n                  port: selectValue,\n                  data_mode: dataValue,\n                  mode: modeValue,\n                  data_length: dataLength,\n                  threshold: threshold,\n                  import_file_name: importFileName\n                 });\n                 setMode(modeValue);\n              }\n              else{\n                console.log(\"validate error!\");\n              }\n            }}\n            style={{height: 45, width: 300}}\n          >\n            start\n          </button>\n        </div>\n      </>\n    );\n  } else {\n    return <div>loading...</div>;\n  }\n};\n\nexport default Init;\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport eel from \"./eel\";\nimport useInterval from \"use-interval\";\n\nfunction App() {\n  const [flags, setFlags] = useState();\n\n  const render_data = async () => {\n    const result = await eel.get_result()();\n    setFlags(result);\n  };\n\n  useInterval(() => {\n    render_data();\n  }, 1000);\n  if (flags) {\n    return (\n      <>\n        <div\n          style={{\n            height: 400,\n            width: 1000,\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          {flags.map((flag) => {\n            const color = flag >= 0.5 ? \"red\" : \"white\";\n            return (\n              <div\n                style={{ width: 190, height: 190, backgroundColor: color }}\n              ></div>\n            );\n          })}\n        </div>\n      </>\n    );\n  } else {\n    return <div>loading...</div>;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\nconst RealtimeLineChart = (props) => {\n  const options = {\n    chart: {\n      height: 500,\n      width: 750,\n      zoom: {\n        enabled: false,\n      },\n      animations: {\n        enabled: true,\n        easing: \"linear\",\n        dynamicAnimation: {\n          enabled: true,\n        },\n      },\n    },\n    xaxis: {\n      type: \"datetime\",\n      range: 2,\n    },\n    yaxis: {\n      show: false,\n      min: 0,\n      max: 200,\n      labels: {\n        formatter: (val) => val.toFixed(0),\n      },\n    },\n  };\n  return <Chart type=\"line\" options={options} series={props.dataList} />;\n};\n\nexport default RealtimeLineChart;\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport eel from \"./eel\";\nimport useInterval from \"use-interval\";\nimport RealtimeLineChart from \"./RealtimeLineChart\";\n\nconst addData = (data, time, new_data) => {\n  if (data.length > 50) data.shift();\n  return [\n    ...data,\n    {\n      x: time,\n      y: new_data,\n    },\n  ];\n};\n\nfunction Graph() {\n  const nameList = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n  const defaultDataList = nameList.map((name) => ({\n    name: name,\n    data: [],\n  }));\n  const [dataList, setDataList] = useState(defaultDataList);\n\n  const render_data = async () => {\n    const new_data = await eel.get_data()();\n    console.log(new_data);\n    setDataList(\n      dataList.map((val, i) => {\n        // ラベルごとにデータを更新する\n        return {\n          name: val.name,\n          data: addData(val.data, new_data[0], new_data[i + 1]),\n        };\n      })\n    );\n  };\n\n  useInterval(() => {\n    render_data();\n  }, 100);\n\n  if (dataList) {\n    return (\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <div style={{ width: 200, height: 150 }}>\n          <RealtimeLineChart dataList={[dataList[0]]} />\n        </div>\n        <div style={{ width: 200, height: 150 }}>\n          <RealtimeLineChart dataList={[dataList[1]]} />\n        </div>\n        <div style={{ width: 200, height: 150 }}>\n          <RealtimeLineChart dataList={[dataList[2]]} />\n        </div>\n        <div style={{ width: 200, height: 150 }}>\n          <RealtimeLineChart dataList={[dataList[3]]} />\n        </div>\n        <div style={{ width: 200, height: 150 }}>\n          <RealtimeLineChart dataList={[dataList[4]]} />\n        </div>\n      </div>\n    );\n  } else {\n    return <div>loading...</div>;\n  }\n}\n\nexport default Graph;\n","import \"./App.css\";\nimport eel from \"./eel\";\nimport React, { useState, useEffect } from \"react\";\nimport Init from \"./Init\";\nimport App from \"./App\";\nimport Graph from \"./Graph\";\nimport useInterval from \"use-interval\";\n\nfunction Main() {\n  const [mode, setMode] = useState();\n  const get_mode = async () => {\n    const new_mode = await eel.get_mode()();\n    console.log(\"get_mode ok!\");\n    console.log(new_mode);\n    setMode(new_mode);\n  };\n\n  useEffect(() => {\n    get_mode();\n  }, []);\n  useEffect(()=>{\n    if(mode !== \"init\"){\n      eel.start_app();\n    }\n  },[mode])\n  useInterval(() => {\n    if (mode === \"calibration\") {\n      get_mode();\n    }\n  }, 1000);\n\n  if (mode === \"init\") {\n    return <Init setMode={setMode}></Init>;\n  }\n  if (mode === \"application\") {\n    return (\n      <div>\n        <App></App>\n        <Graph></Graph>\n      </div>\n    );\n  }\n  if(mode === \"calibration\"){\n    return <div>calibration now...</div>\n  }\n\n  return <div>loading...</div>;\n}\n\nexport default Main;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./App.css\";\nimport Main from \"./Main\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Main></Main>\n      </header>\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}